오늘 한 일 (회고)
1. 인공지능 특강
- Style Transfer

의미
말 그대로 한 이미지의 내용에 다른 이미지의 스타일을 입히는 것을 뜻한다.
하는 법
Convolution Neural Network 합성곱을 이용하여 Style Transfer를 수행한
- CNN 간략 다시 정리

작은 사이즈의 필터를 만들어준다.
이 필터를 이미지에서 순차적으로 돌아가면서 연산을 걸어준다.
이때 필터를 통과한 결과는 행과 열의 크기가 줄어든다
구조 중간에 있는 Feature map들은 이전 데이터의 함축적인 정보를 포함하고 있다.
- GAN 간략 다시 정리

- 용어 정리

가중합 : 가중치를 곱한 값을 더한 값
CVPR : 전 세계 최고 권위 컴퓨터 학회
G : generator
D : discriminator

2. 파이썬 기초 특강

for i in 4

mb_size*i, mb_size(i+1)

3. 딥러닝을 통한 이미지 처리 2주 차 듣기

- 요약

img.shape으로는 이미지의 높이 너비 채널을 받을 수 있다 dsize = ( 가로 , 세로 )
딥러닝 모델에 넣기 위한 이미지 데이터 차원 변형

h, w, c = img.shape

img = cv2.resize(img, dsize=(500, int(h / w * 500)))

img = img[162:513, 185:428]

MEAN_VALUE = [103.939, 116.779, 123.680]
blob = cv2.dnn.blobFromImage(img, mean=MEAN_VALUE)
차원 줄이기 차원 변형했던 것을 원래대로 (높이, 너비, 채널) 순으로 되돌려놓습니다. squeeze()를 사용하여 추가했던 첫 번째 차원을 삭제합니다. (1, 채널, 높이, 너비)에서 (1, ) 부분을 없애고 (채널, 높이, 너비) 형태로 만듭니다.

순서 바꾸기 transpose()를 사용하여 (채널, 높이, 너비) → (높이, 너비, 채널) 형태로 변형합니다.

print(blob.shape)
net.setInput(blob)
output = net.forward()

output = output.squeeze().transpose((1, 2, 0))
output += MEAN_VALUE

output = np.clip(output, 0, 255)
output = output.astype('uint8')

output3 = np.concatenate([output [:, :250], output2 [:, 250:]], axis=1)

axis 0과 1에따라 자르는 방향 달라짐

내일 할 일

1. 파이썬 장고 실무 복습하기

2. 티스토리 블로그에 TIL을 올리면 자동으로 Github에 올라갈 수 있게 만들기

3. 장고 클론 코딩 위주로 실습 시작하기

4. 딥러닝을 통한 이미지 처리 3주 차 듣기